name: QSynth Windows

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo
  INSTALL_LOCATION: qsynth_install

jobs:
  build:
    runs-on: windows-latest
    strategy:
        fail-fast: false
        matrix:
          include:
            # { icon: 'â¬›', sys: mingw32 }
            - { icon: 'ðŸŸ¦', sys: mingw64 }
            - { icon: 'ðŸŸ¨', sys: ucrt64  }
            - { icon: 'ðŸŸ§', sys: clang64 }
            # { icon: 'ðŸŸª', sys: clangarm64 }
    name: ðŸš§${{ matrix.icon }} ${{ matrix.sys }}
    defaults:
      run:
        shell: msys2 {0}

    steps:
    - name: '${{ matrix.icon }} Checkout'
      uses: actions/checkout@v4

    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        release: false
        msystem: ${{matrix.sys}}
        install: >-
          make
        pacboy: >-
          toolchain:p
          cmake:p
          ninja:p
          qt6-base:p
          qt6-svg:p
          qt6-tools:p
          fluidsynth:p
          # nsis:p
    
    - name: '${{ matrix.icon }} Configure CMake'
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_LOCATION}}

    - name: '${{ matrix.icon }} Build'
      run: cmake --build build --config ${{env.BUILD_TYPE}}

    #- name: '${{ matrix.icon }} Run Windows installer creation'
    #  run: makensis build/src/setup.nsi

    #- name: '${{ matrix.icon }} Install'
    #  run: cmake --install build && ls -la $INSTALL_LOCATION

    #- name: '${{ matrix.icon }} Upload Artifacts'
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: ${{env.INSTALL_LOCATION}}-${{matrix.sys}}
    #    path: ${{env.INSTALL_LOCATION}}
    #    retention-days: 14
    #    overwrite: true
